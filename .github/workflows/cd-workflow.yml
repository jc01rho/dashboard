# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous Deployment - App

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
  


jobs:
  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        # amd64 arm64 arm ppc64le s390x
          - linux/amd64
          - linux/arm64
          - linux/arm64
          - linux/ppc64le
          - linux/s390x
    env:
      NG_CLI_ANALYTICS: ci
      GOPROXY: "https://proxy.golang.org"
      NODE_OPTIONS: "--max-old-space-size=8192"
      DOCKER_CLI_EXPERIMENTAL: enabled
      TERM: xterm

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV    

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Setup Environment
        uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5 # v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@b22fbbc2921299758641fab08929b4ac52b32923 # v2
        with:
          go-version: 1.19.0

      - name: Setup NodeJS
        uses: actions/setup-node@17f8bd926464a1afa4c6a11669539e9c1ba77048 # v2.1.2
        with:
          node-version: 16.14.2

      - name: Cache Node Modules
        uses: actions/cache@661fd3eb7f2f20d8c7c84bc2b0509efd7a826628 # v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        shell: bash
        run: |
          [ ! -d "node_modules" ] && npm ci || node aio/scripts/version.mjs && go mod download

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.12.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jc01rho
          password: ${{ secrets.CR_PAT }}

      - name: Push Image
        shell: bash
        run: |
          export GOPATH=$(go env GOPATH)/bin
          
          make build-cross
          ls -al
          ls -al ./dist
          ls -al ./dist/linux
          ls -al ./dist/${{ matrix.platform }}


      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./dist/${{ matrix.platform }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            BUILDPLATFORM=${{ matrix.platform }}

      

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      # - name: Create and push manifest images
      #   uses: Noelware/docker-manifest-action@master # or use a pinned version in the Releases tab
      #   with:
      #       inputs: ghcr.io/jc01rho/dashboard:latest
      #       images: ghcr.io/jc01rho/dashboard-s390x:latest,ghcr.io/jc01rho/dashboard-arm64:latest,ghcr.io/jc01rho/dashboard-amd64:latest,ghcr.io/jc01rho/dashboard-ppc64le:lates,ghcr.io/jc01rho/dashboard-arm:latest
      #       push: true
      #       amend: true
  merge:
    runs-on: ubuntu-latest
    needs:
      - Release
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: jc01rho
          password: ${{ secrets.CR_PAT }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}         